"""Many to many added

Revision ID: 4c903e937e53
Revises: da249e45cd3e
Create Date: 2024-05-31 05:47:18.993470

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel.sql.sqltypes
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = '4c903e937e53'
down_revision: Union[str, None] = 'da249e45cd3e'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('sprockettypesprocketproductionlink',
    sa.Column('sprocket_type_id', sa.Integer(), nullable=False),
    sa.Column('sprocket_production_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['sprocket_production_id'], ['sprocketproduction.id'], ),
    sa.ForeignKeyConstraint(['sprocket_type_id'], ['sprockettype.id'], ),
    sa.PrimaryKeyConstraint('sprocket_type_id', 'sprocket_production_id')
    )
    with op.batch_alter_table('sprockettype', schema=None) as batch_op:
        batch_op.drop_constraint('sprockettype_production_id_fkey', type_='foreignkey')
        batch_op.drop_column('production_id')

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('sprockettype', schema=None) as batch_op:
        batch_op.add_column(sa.Column('production_id', sa.INTEGER(), autoincrement=False, nullable=True))
        batch_op.create_foreign_key('sprockettype_production_id_fkey', 'sprocketproduction', ['production_id'], ['id'])

    op.drop_table('sprockettypesprocketproductionlink')
    # ### end Alembic commands ###
